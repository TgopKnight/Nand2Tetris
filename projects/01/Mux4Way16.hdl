// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/Mux4Way16.hdl

/**
 * 4-way 16-bit multiplexor:
 * out = a if sel == 00
 *       b if sel == 01
 *       c if sel == 10
 *       d if sel == 11
 */

CHIP Mux4Way16 {
    IN a[16], b[16], c[16], d[16], sel[2];
    OUT out[16];

    PARTS:
    // Put your code here:
		/**
		 * sel[0] sel[1]   00  01  10  11
		 * a^b c^d sel[1] a^b a^b c^d c^d
		 * a   c   sel[1]   a   a   c   c = x
		 * b		d   sel[1]   b   b   d   d = y
		 * x   y   !sel[0]  y   x   y   x
		 *                  b   a   d   c
		 */
Mux(a = a[0], b = c[0], sel = sel[1], out = q10);
Mux(a = b[0], b = d[0], sel = sel[1], out = q20);
Mux(a = q10, b = q20, sel = sel[0], out = out[0]);
Mux(a = a[1], b = c[1], sel = sel[1], out = q11);
Mux(a = b[1], b = d[1], sel = sel[1], out = q21);
Mux(a = q11, b = q21, sel = sel[0], out = out[1]);
Mux(a = a[2], b = c[2], sel = sel[1], out = q12);
Mux(a = b[2], b = d[2], sel = sel[1], out = q22);
Mux(a = q12, b = q22, sel = sel[0], out = out[2]);
Mux(a = a[3], b = c[3], sel = sel[1], out = q13);
Mux(a = b[3], b = d[3], sel = sel[1], out = q23);
Mux(a = q13, b = q23, sel = sel[0], out = out[3]);
Mux(a = a[4], b = c[4], sel = sel[1], out = q14);
Mux(a = b[4], b = d[4], sel = sel[1], out = q24);
Mux(a = q14, b = q24, sel = sel[0], out = out[4]);
Mux(a = a[5], b = c[5], sel = sel[1], out = q15);
Mux(a = b[5], b = d[5], sel = sel[1], out = q25);
Mux(a = q15, b = q25, sel = sel[0], out = out[5]);
Mux(a = a[6], b = c[6], sel = sel[1], out = q16);
Mux(a = b[6], b = d[6], sel = sel[1], out = q26);
Mux(a = q16, b = q26, sel = sel[0], out = out[6]);
Mux(a = a[7], b = c[7], sel = sel[1], out = q17);
Mux(a = b[7], b = d[7], sel = sel[1], out = q27);
Mux(a = q17, b = q27, sel = sel[0], out = out[7]);
Mux(a = a[8], b = c[8], sel = sel[1], out = q18);
Mux(a = b[8], b = d[8], sel = sel[1], out = q28);
Mux(a = q18, b = q28, sel = sel[0], out = out[8]);
Mux(a = a[9], b = c[9], sel = sel[1], out = q19);
Mux(a = b[9], b = d[9], sel = sel[1], out = q29);
Mux(a = q19, b = q29, sel = sel[0], out = out[9]);
Mux(a = a[10], b = c[10], sel = sel[1], out = q110);
Mux(a = b[10], b = d[10], sel = sel[1], out = q210);
Mux(a = q110, b = q210, sel = sel[0], out = out[10]);
Mux(a = a[11], b = c[11], sel = sel[1], out = q111);
Mux(a = b[11], b = d[11], sel = sel[1], out = q211);
Mux(a = q111, b = q211, sel = sel[0], out = out[11]);
Mux(a = a[12], b = c[12], sel = sel[1], out = q112);
Mux(a = b[12], b = d[12], sel = sel[1], out = q212);
Mux(a = q112, b = q212, sel = sel[0], out = out[12]);
Mux(a = a[13], b = c[13], sel = sel[1], out = q113);
Mux(a = b[13], b = d[13], sel = sel[1], out = q213);
Mux(a = q113, b = q213, sel = sel[0], out = out[13]);
Mux(a = a[14], b = c[14], sel = sel[1], out = q114);
Mux(a = b[14], b = d[14], sel = sel[1], out = q214);
Mux(a = q114, b = q214, sel = sel[0], out = out[14]);
Mux(a = a[15], b = c[15], sel = sel[1], out = q115);
Mux(a = b[15], b = d[15], sel = sel[1], out = q215);
Mux(a = q115, b = q215, sel = sel[0], out = out[15]);
		
}
