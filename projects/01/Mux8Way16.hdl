// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/Mux8Way16.hdl

/**
 * 8-way 16-bit multiplexor:
 * out = a if sel == 000
 *       b if sel == 001
 *       etc.
 *       h if sel == 111
 */

CHIP Mux8Way16 {
    IN a[16], b[16], c[16], d[16],
       e[16], f[16], g[16], h[16],
       sel[3];
    OUT out[16];

    PARTS:
    // Put your code here:
Mux(a = a[0], b = e[0], sel = sel[2], out = p10);
Mux(a = b[0], b = f[0], sel = sel[2], out = p20);
Mux(a = c[0], b = g[0], sel = sel[2], out = p30);
Mux(a = d[0], b = h[0], sel = sel[2], out = p40);
Mux(a = p10, b = p30, sel = sel[1], out = q10);
Mux(a = p20, b = p40, sel = sel[1], out = q20);
Mux(a = q10, b = q20, sel = sel[0], out = out[0]);
Mux(a = a[1], b = e[1], sel = sel[2], out = p11);
Mux(a = b[1], b = f[1], sel = sel[2], out = p21);
Mux(a = c[1], b = g[1], sel = sel[2], out = p31);
Mux(a = d[1], b = h[1], sel = sel[2], out = p41);
Mux(a = p11, b = p31, sel = sel[1], out = q11);
Mux(a = p21, b = p41, sel = sel[1], out = q21);
Mux(a = q11, b = q21, sel = sel[0], out = out[1]);
Mux(a = a[2], b = e[2], sel = sel[2], out = p12);
Mux(a = b[2], b = f[2], sel = sel[2], out = p22);
Mux(a = c[2], b = g[2], sel = sel[2], out = p32);
Mux(a = d[2], b = h[2], sel = sel[2], out = p42);
Mux(a = p12, b = p32, sel = sel[1], out = q12);
Mux(a = p22, b = p42, sel = sel[1], out = q22);
Mux(a = q12, b = q22, sel = sel[0], out = out[2]);
Mux(a = a[3], b = e[3], sel = sel[2], out = p13);
Mux(a = b[3], b = f[3], sel = sel[2], out = p23);
Mux(a = c[3], b = g[3], sel = sel[2], out = p33);
Mux(a = d[3], b = h[3], sel = sel[2], out = p43);
Mux(a = p13, b = p33, sel = sel[1], out = q13);
Mux(a = p23, b = p43, sel = sel[1], out = q23);
Mux(a = q13, b = q23, sel = sel[0], out = out[3]);
Mux(a = a[4], b = e[4], sel = sel[2], out = p14);
Mux(a = b[4], b = f[4], sel = sel[2], out = p24);
Mux(a = c[4], b = g[4], sel = sel[2], out = p34);
Mux(a = d[4], b = h[4], sel = sel[2], out = p44);
Mux(a = p14, b = p34, sel = sel[1], out = q14);
Mux(a = p24, b = p44, sel = sel[1], out = q24);
Mux(a = q14, b = q24, sel = sel[0], out = out[4]);
Mux(a = a[5], b = e[5], sel = sel[2], out = p15);
Mux(a = b[5], b = f[5], sel = sel[2], out = p25);
Mux(a = c[5], b = g[5], sel = sel[2], out = p35);
Mux(a = d[5], b = h[5], sel = sel[2], out = p45);
Mux(a = p15, b = p35, sel = sel[1], out = q15);
Mux(a = p25, b = p45, sel = sel[1], out = q25);
Mux(a = q15, b = q25, sel = sel[0], out = out[5]);
Mux(a = a[6], b = e[6], sel = sel[2], out = p16);
Mux(a = b[6], b = f[6], sel = sel[2], out = p26);
Mux(a = c[6], b = g[6], sel = sel[2], out = p36);
Mux(a = d[6], b = h[6], sel = sel[2], out = p46);
Mux(a = p16, b = p36, sel = sel[1], out = q16);
Mux(a = p26, b = p46, sel = sel[1], out = q26);
Mux(a = q16, b = q26, sel = sel[0], out = out[6]);
Mux(a = a[7], b = e[7], sel = sel[2], out = p17);
Mux(a = b[7], b = f[7], sel = sel[2], out = p27);
Mux(a = c[7], b = g[7], sel = sel[2], out = p37);
Mux(a = d[7], b = h[7], sel = sel[2], out = p47);
Mux(a = p17, b = p37, sel = sel[1], out = q17);
Mux(a = p27, b = p47, sel = sel[1], out = q27);
Mux(a = q17, b = q27, sel = sel[0], out = out[7]);
Mux(a = a[8], b = e[8], sel = sel[2], out = p18);
Mux(a = b[8], b = f[8], sel = sel[2], out = p28);
Mux(a = c[8], b = g[8], sel = sel[2], out = p38);
Mux(a = d[8], b = h[8], sel = sel[2], out = p48);
Mux(a = p18, b = p38, sel = sel[1], out = q18);
Mux(a = p28, b = p48, sel = sel[1], out = q28);
Mux(a = q18, b = q28, sel = sel[0], out = out[8]);
Mux(a = a[9], b = e[9], sel = sel[2], out = p19);
Mux(a = b[9], b = f[9], sel = sel[2], out = p29);
Mux(a = c[9], b = g[9], sel = sel[2], out = p39);
Mux(a = d[9], b = h[9], sel = sel[2], out = p49);
Mux(a = p19, b = p39, sel = sel[1], out = q19);
Mux(a = p29, b = p49, sel = sel[1], out = q29);
Mux(a = q19, b = q29, sel = sel[0], out = out[9]);
Mux(a = a[10], b = e[10], sel = sel[2], out = p110);
Mux(a = b[10], b = f[10], sel = sel[2], out = p210);
Mux(a = c[10], b = g[10], sel = sel[2], out = p310);
Mux(a = d[10], b = h[10], sel = sel[2], out = p410);
Mux(a = p110, b = p310, sel = sel[1], out = q110);
Mux(a = p210, b = p410, sel = sel[1], out = q210);
Mux(a = q110, b = q210, sel = sel[0], out = out[10]);
Mux(a = a[11], b = e[11], sel = sel[2], out = p111);
Mux(a = b[11], b = f[11], sel = sel[2], out = p211);
Mux(a = c[11], b = g[11], sel = sel[2], out = p311);
Mux(a = d[11], b = h[11], sel = sel[2], out = p411);
Mux(a = p111, b = p311, sel = sel[1], out = q111);
Mux(a = p211, b = p411, sel = sel[1], out = q211);
Mux(a = q111, b = q211, sel = sel[0], out = out[11]);
Mux(a = a[12], b = e[12], sel = sel[2], out = p112);
Mux(a = b[12], b = f[12], sel = sel[2], out = p212);
Mux(a = c[12], b = g[12], sel = sel[2], out = p312);
Mux(a = d[12], b = h[12], sel = sel[2], out = p412);
Mux(a = p112, b = p312, sel = sel[1], out = q112);
Mux(a = p212, b = p412, sel = sel[1], out = q212);
Mux(a = q112, b = q212, sel = sel[0], out = out[12]);
Mux(a = a[13], b = e[13], sel = sel[2], out = p113);
Mux(a = b[13], b = f[13], sel = sel[2], out = p213);
Mux(a = c[13], b = g[13], sel = sel[2], out = p313);
Mux(a = d[13], b = h[13], sel = sel[2], out = p413);
Mux(a = p113, b = p313, sel = sel[1], out = q113);
Mux(a = p213, b = p413, sel = sel[1], out = q213);
Mux(a = q113, b = q213, sel = sel[0], out = out[13]);
Mux(a = a[14], b = e[14], sel = sel[2], out = p114);
Mux(a = b[14], b = f[14], sel = sel[2], out = p214);
Mux(a = c[14], b = g[14], sel = sel[2], out = p314);
Mux(a = d[14], b = h[14], sel = sel[2], out = p414);
Mux(a = p114, b = p314, sel = sel[1], out = q114);
Mux(a = p214, b = p414, sel = sel[1], out = q214);
Mux(a = q114, b = q214, sel = sel[0], out = out[14]);
Mux(a = a[15], b = e[15], sel = sel[2], out = p115);
Mux(a = b[15], b = f[15], sel = sel[2], out = p215);
Mux(a = c[15], b = g[15], sel = sel[2], out = p315);
Mux(a = d[15], b = h[15], sel = sel[2], out = p415);
Mux(a = p115, b = p315, sel = sel[1], out = q115);
Mux(a = p215, b = p415, sel = sel[1], out = q215);
Mux(a = q115, b = q215, sel = sel[0], out = out[15]);
		
}
